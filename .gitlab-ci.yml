stages:
  - test
  - build
  - deploy

variables:
  PROJECT_VERSION: "0.4"

build docker:
  stage: build
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  script:
    - mkdir -p /kaniko/.docker
    - echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}" > /kaniko/.docker/config.json
    - /kaniko/executor --context $CI_PROJECT_DIR --dockerfile $CI_PROJECT_DIR/Dockerfile --destination $CI_REGISTRY_IMAGE:$PROJECT_VERSION --build-arg project_version=$PROJECT_VERSION
  only:
    changes:
      - Dockerfile
      - requirments.txt


unit tests:
  stage: test
  tags: [gitlab-org-docker]
  image: python:3-slim
  script:
    - pip install --no-cache-dir -r requirements.txt
    - coverage run --source pipeline_mermaid -m unittest discover tests "*test*"
    - coverage xml # for merge request
    - coverage html # for pages
    - coverage report # for badge and analytics --> repository
  artifacts:
    paths:
      - htmlcov/
    reports:
      cobertura: coverage.xml
  coverage: '/^TOTAL.*\s+(\d+\%)$/'


build package:
  tags: [ gitlab-org-docker ]
  image: python:3-slim
  stage: build
  script:
    - python setup.py sdist bdist_wheel
  artifacts:
    paths:
      - dist/*


pages:
  stage: deploy
  dependencies:
    - unit tests
  script:
    - mv htmlcov/ public/
  artifacts:
    paths:
      - public
    expire_in: 30 days
  only:
    - master


notify merge request:
  stage: deploy
  tags: [ gitlab-org-docker ]
  image: $CI_REGISTRY_IMAGE:$PROJECT_VERSION
  dependencies: []
  script:
    - pipeline-mermaid show_pipeline
    - pipeline-mermaid show_pipeline 190875422
    - pipeline-mermaid show_pipeline 192204962 journey
    - pipeline-mermaid show_pipeline 249125838 gantt 3 "test for ${PROJECT_VERSION} version"


upload to pypi:
  environment:
    name: pypi
  stage: deploy
  dependencies:
    - build package
  tags: [ gitlab-org-docker ]
  image: $CI_REGISTRY_IMAGE:$PROJECT_VERSION
  when: manual
  script:
    - twine upload dist/* --non-interactive -u __token__ -p $PYPI_TOKEN --verbose
